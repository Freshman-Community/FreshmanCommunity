services:
  certbot:
    environment:
      SERVER_HOST: ${SERVER_HOST}
    build:
      context: ./certbot
    networks:
      - default
    ports:
      - "80:80"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./certbot/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/certs:/etc/letsencrypt
      - ./certbot/log:/var/log/letsencrypt

  database:
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_DB=${DATABASE_NAME}
    image: postgres:alpine
    networks:
      - default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - db-data:/var/lib/postgresql/data

  backend:
    environment:
      - SESSION_SECRET=${SESSION_SECRET}
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    build: ./backend
    networks:
      - default
    ports:
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./backend/src:/app/src
      - ./certbot/certs:/certs
    depends_on:
      - certbot

  # frontend:
  #   environment:
  #     - NGINX_HOST=${SERVER_HOST}
  #     - NGINX_PORT=3000
  #   image: nginx:alpine
  #   networks:
  #     - default
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ./frontend:/usr/share/nginx/html:ro

  # proxy:
  #   environment:
  #     - SERVER_HOST=${SERVER_HOST}
  #     - BACKEND_HOST=backend
  #     - BACKEND_PORT=3000
  #     - FRONTEND_HOST=frontend
  #     - FRONTEND_PORT=443
  #   image: nginx:alpine
  #   networks:
  #     - default
  #   ports:
  #     - "${SERVER_PORT}:80"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ./certbot/certs:/certs
  #     - ./proxy/default.conf:/etc/nginx/templates/default.conf.template:ro
  #   depends_on:
  #     - certbot

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/16

volumes:
  db-data:
